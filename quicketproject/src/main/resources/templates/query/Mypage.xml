<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.client.mypage.dao.MypageDao">

	<!-- 예매내역 조회 (날짜 검색 추가) -->
	<select id="myTicketList" parameterType="mypage" resultType="mypage">
		select pay_num, hall_id, ti_regdate, hall_date, s_num, s_name, u_id, ti_status, seat_num_cnt 
		from (
		    SELECT rownum as rnum, pay_num, hall_id, to_char(ti_regdate,'yyyy-mm-dd') AS ti_regdate, hall_date, s_num, s_name, u_id, ti_status, seat_num_cnt   
		    FROM (
		        SELECT 
		            p.pay_num, h.hall_id, t.ti_regdate, COUNT(p.pay_num) AS seat_num_cnt, h.hall_date, s.s_num, s.s_name, t.u_id, t.ti_status, img_dir 
		        FROM (
		            SELECT 
		                 pay_num, ti_regdate, u_id, ti_status  
		            FROM ticket
		        ) t INNER JOIN ticket_seat ts ON t.pay_num = ts.pay_num
		            INNER JOIN hall h ON ts.hall_id = h.hall_id
		            INNER JOIN theater th ON h.th_num = th.th_num
		            INNER JOIN show s ON th.th_num = s.th_num
		            INNER JOIN img i ON s.s_num = i.s_num
		            INNER JOIN pay p ON t.pay_num = p.pay_num
		        WHERE 
		        <trim prefix="(" suffix=") AND" prefixOverrides="AND"> <!-- 아래 조건 만족하지 않으면 () AND <- AND 제거 -->
					<if test="search=='hall_date'">
						<![CDATA[hall_date between #{start_date} and #{end_date} ]]>
					</if>
					<if test="search=='ti_regdate'">
						<![CDATA[to_char(ti_regdate, 'YYYY-MM-DD') between #{start_date} and #{end_date} ]]>
					</if>
				</trim>
		        img_dir LIKE '%'||'poster' AND t.u_id = #{u_id}		        
		        GROUP BY p.pay_num, h.hall_id, t.ti_regdate, h.hall_date, s.s_num, s.s_name, t.u_id, t.ti_status, img_dir 
		        ORDER BY pay_num
		    ) 
		    <![CDATA[ WHERE rownum <= #{pageNum} * #{amount}
		)
		WHERE rnum > (#{pageNum} -1) * #{amount} ]]>
	</select>
	
	<select id="ticketListCnt" parameterType="mypage" resultType="int">
		SELECT COUNT(pay_num) FROM ticket
		WHERE u_id = #{u_id}
	</select>
	
	<!-- 상세정보 조회(관심공연 추가) -->
	<select id="myTicketDetail" parameterType="mypage" resultType="mypage">
		select DISTINCT pay_num, RESULT.s_num, s_name, TO_CHAR(ti_regdate,'yyyymmdd') ti_regdate, hall_id, seat_nums, seat_ages, u_id, ti_status, img_name, img_dir, img_type, 
		    th_name, hall_date, hall_turn, hall_time, s_price, pay_amount, B.is_likes, 
		    CASE WHEN c_num IS NULL THEN null
		         WHEN c_num IS NOT NULL THEN NULL END c_name,
		    CASE WHEN c_num IS NULL THEN null
		         WHEN c_num IS NOT NULL THEN NULL END c_discount     
		from (
		    select t.pay_num, s.s_num, s.s_name, t.ti_regdate, h.hall_id,
		            (select 
		                (select seat_num 
		                    from (
		                        select pay_num
		                            , SUBSTR(
		                                XMLAGG(
		                                    XMLELEMENT(COL ,',', SEAT_NUM) ORDER BY SEAT_NUM).EXTRACT('//text()'
		                                    ).GETSTRINGVAL()
		                                , 2) SEAT_NUM
		                        FROM TICKET_SEAT
		                        where pay_num=#{pay_num}
		                        GROUP BY pay_num) 
		                ) SEAT_NUM
		            from dual) AS seat_nums,
		            (select 
		                (select seat_age 
		                    from (
		                        select pay_num
		                            , SUBSTR(
		                                XMLAGG(
		                                    XMLELEMENT(COL ,',', seat_age) ORDER BY seat_age).EXTRACT('//text()'
		                                    ).GETSTRINGVAL()
		                                , 2) seat_age
		                        FROM TICKET_SEAT ts INNER JOIN SEAT se ON ts.seat_num = se.seat_num AND ts.hall_id = se.hall_id
		                        where pay_num=#{pay_num}
		                        GROUP BY pay_num) 
		                ) seat_age
		            from dual) AS seat_ages,
		            t.u_id, t.ti_status, i.img_name, i.img_dir, i.img_type, th.th_name, h.hall_date, h.hall_turn, h.hall_time, s.s_price, p.pay_name, p.pay_amount
		            ,t.c_num, ac.c_name, ac.c_discount
		    from ticket t INNER JOIN ticket_seat ts ON t.pay_num = ts.pay_num
		                  INNER JOIN hall h ON ts.hall_id = h.hall_id
		                  INNER JOIN theater th ON h.th_num = th.th_num
		                  INNER JOIN show s ON th.th_num = s.th_num
		                  INNER JOIN img i ON s.s_num = i.s_num
		                  INNER JOIN pay p ON t.pay_num = p.pay_num
		                  INNER JOIN user_coupon uc ON uc.u_id = t.u_id
		                  INNER JOIN admin_coupon ac ON ac.c_num =
		                                             CASE WHEN t.c_num is not null THEN t.c_num
		                                                  WHEN t.c_num is null THEN uc.c_num
		                                                  END
		    where t.pay_num=#{pay_num}
		    AND img_dir LIKE '%'||'poster' 
		) RESULT LEFT JOIN (SELECT s_num, 1 is_likes FROM bookmark 
		                    WHERE EXISTS(SELECT 1 FROM bookmark WHERE u_id = #{u_id} AND s_num = #{s_num})) B
		         ON RESULT.s_num = B.s_num        
		group by pay_num, RESULT.s_num, s_name, ti_regdate, hall_id, seat_nums, seat_ages, u_id, ti_status, img_name, img_dir, img_type, th_name, hall_date, 
		hall_turn, hall_time, s_price, pay_name, pay_amount, B.is_likes, c_num, c_name, c_discount	
	</select>
	
	<!-- 좌석번호 리스트 조회 -->
	<select id="mySeatList" parameterType="int" resultType="mypage">
		SELECT seat_num
		FROM ticket t JOIN ticket_seat ts 
						ON t.pay_num = ts.pay_num
		WHERE t.pay_num = #{pay_num}
	</select>
	
	<!-- 좌석연령 리스트 조회 -->
	<select id="seatAgeList" parameterType="int" resultType="mypage">
		SELECT seat_age
		FROM ticket t INNER JOIN ticket_seat ts ON t.pay_num = ts.pay_num
		              INNER JOIN seat se ON ts.seat_num = se.seat_num and ts.hall_id = se.hall_id
		WHERE t.pay_num = #{pay_num}
	</select>
	
	<!-- 예매 취소 -->
	<update id="myTicketDelete" parameterType="int">
		UPDATE ticket
		SET ti_status = 0
		WHERE ti_status = 1 AND pay_num = #{pay_num}
	</update>
	
	
	<!-- 관심공연 등록 -->
	<insert id="addlikes" parameterType="mypage">
		INSERT INTO bookmark (u_id, s_num)
		VALUES(#{u_id}, ${s_num})
	</insert>
	
	<!-- 관심공연 취소 -->
	<delete id="cancelLikes" parameterType="mypage">
		DELETE bookmark
		WHERE u_id = #{u_id} AND s_num = #{s_num}
	</delete>
	
	<!-- (문의글 등록폼 페이지) 회원의 예매번호, 공연이름 조회 -->
	<select id="ticketList" parameterType="String" resultType="mypage">
		SELECT 
		    rnum, pay_num, hall_id, ti_regdate, hall_date, s_num, s_name, u_id, ti_status
		FROM (
		    SELECT 
		        rnum, p.pay_num, h.hall_id, to_char(t.ti_regdate,'yyyy-mm-dd') AS ti_regdate, h.hall_date, s.s_num, s.s_name, t.u_id, t.ti_status, i.img_dir
		    FROM (
		        SELECT 
		            rownum AS rnum, pay_num, ti_regdate, u_id, ti_status  
		        FROM ticket
		        WHERE u_id = 'user02'
		    ) t INNER JOIN ticket_seat ts ON t.pay_num = ts.pay_num
		        INNER JOIN hall h ON ts.hall_id = h.hall_id
		        INNER JOIN theater th ON h.th_num = th.th_num
		        INNER JOIN show s ON th.th_num = s.th_num
		        INNER JOIN img i ON s.s_num = i.s_num
		        INNER JOIN pay p ON t.pay_num = p.pay_num
		    WHERE i.img_dir LIKE '%'||'poster'
		) 
		GROUP BY rnum, pay_num, hall_id, ti_regdate, hall_date, s_num, s_name, u_id, ti_status
		ORDER BY pay_num
	</select>
	
	<!-- 문의글 등록 폼에서 조회할 faq 리스트 -->
	<select id="faqList" parameterType="String" resultType="mypage">
		select * from (
		    select * from faq 
		    where f_category = #{f_category}
		    order by DBMS_RANDOM.RANDOM
		)
		<![CDATA[ where rownum <= 5 ]]>
	</select>
	
	
	<!-- 관심공연 리스트 조회 -->
	<select id="myLikeList" parameterType="mypage" resultType="mypage">
		SELECT S.s_num, s_name, TO_CHAR(s_opendate,'yyyy-mm-dd') AS s_opendate, TO_CHAR(s_closedate,'yyyy-mm-dd') AS s_closedate, TO_CHAR(b_regidate,'yyyy-mm-dd') AS b_regidate
		FROM bookmark B INNER JOIN show S
		                        ON B.s_num = S.s_num
		WHERE u_id = #{u_id}
		ORDER BY b_regidate DESC
	</select>
	
	
	<!-- 상세페이지의 관심공연 등록 여부 조회 -->
	<select id="myShowLike" parameterType="mypage" resultType="mypage">
		select B.u_id, s.s_num, B.is_likes
		from (
		    select s_num
		    from show
		    where s_num=#{s_num}) s LEFT JOIN (SELECT s_num, u_id, 1 is_likes FROM bookmark 
		                            WHERE EXISTS(SELECT 1 FROM bookmark WHERE u_id = #{u_id} AND s_num = #{s_num})) B
		                        ON s.s_num = B.s_num  
		group by B.u_id, s.s_num, B.is_likes
		having u_id = #{u_id}
	</select>
	
	<!-- 상세페이지 - 공연의 관심수 -->
	<select id="likesCount" parameterType="int" resultType="int">
		SELECT COUNT(*) likesCount
		FROM bookmark
		WHERE s_num = #{s_num}
	</select>
	
	<!-- 페이징 위한 나의 관심공연 수 -->
	<select id="myLikesListCnt" parameterType="mypage" resultType="int">
		SELECT COUNT(*)
		FROM bookmark
		WHERE u_id = #{u_id}
	</select>
	
	<!-- qna 리스트 조회 -->
	<select id="qnaList" parameterType="mypage" resultType="mypage">
		SELECT rnum, q_no, s_num, s_name, q_title, q_regdate
		FROM ( 
		    SELECT 
		        rnum, q_no, Q.s_num, s_name, q_title, TO_CHAR(q_regdate,'yyyy-mm-dd') q_regdate
		    FROM (
		        SELECT /*+ INDEX_DESC(qna pk_qna) */
		            rownum AS rnum, q_no, s_num, q_title, q_regdate, u_id
		        FROM qna
		        WHERE u_id = #{u_id}
		        ORDER BY q_no DESC
		    ) Q INNER JOIN show S ON Q.s_num = S.s_num
		    WHERE 
		    <![CDATA[ rownum <= (1 * 10)
		)
		WHERE (rnum > (1 - 1) * 10) 
		]]>
	</select>
	
	<!-- qna 리스트 개수 -->
	<select id="qnaListCnt" parameterType="mypage" resultType="int">
		SELECT COUNT(*)
		FROM qna
		WHERE u_id = #{u_id}
	</select>
	
	<!-- 관람후기 리스트 조회 -->
	<select id="reviewList" parameterType="mypage" resultType="mypage">
		SELECT rnum, r_no, s_num, s_name, r_title, r_point, r_regdate
		FROM ( 
		    SELECT 
		        rnum, r_no, R.s_num, s_name, r_title, r_point, TO_CHAR(r_regdate,'yyyy-mm-dd') r_regdate
		    FROM (
		        SELECT 
		            rownum AS rnum, r_no, s_num, r_title, r_point, r_regdate, u_id
		        FROM reviewBoard
		        WHERE u_id = 'user02'
		        ORDER BY r_no DESC
		    ) R INNER JOIN show S ON R.s_num = S.s_num
		    WHERE
			 <![CDATA[ rownum <= (1 * 10)
		)
		WHERE (rnum > (1 - 1) * 10) 
		]]>
	</select>
	
	<!-- 관람후기 리스트 개수 -->
	<select id="reviewListCnt" parameterType="mypage" resultType="int">
		SELECT COUNT(*)
		FROM reviewBoard
		WHERE u_id = #{u_id}
	</select>
	
	<!-- 발급쿠폰 리스트 조회(사용가능) -->
	<select id="couponList" parameterType="mypage" resultType="mypage">
		SELECT u_id, U.c_num, c_name, c_discount, uc_state, uc_date, TO_CHAR(c_startdate,'yyyy-mm-dd') c_startdate, TO_CHAR(c_enddate,'yyyy-mm-dd') c_enddate, 
			(TO_DATE(c_enddate, 'yyyy-mm-dd') - TO_DATE(sysdate,'yyyy-mm-dd')) AS c_remain
		FROM user_coupon U INNER JOIN admin_coupon A
		                         ON U.c_num = A.c_num
		WHERE u_id = #{u_id} AND uc_state=0
		AND <![CDATA[ sysdate < c_enddate ]]>
		ORDER BY c_num DESC
	</select>
	
	<!-- 발급쿠폰 개수(사용가능) -->
	<select id="couponListCnt" parameterType="mypage" resultType="int">
		SELECT COUNT(*)
		FROM user_coupon U INNER JOIN admin_coupon A
		                         ON U.c_num = A.c_num
		WHERE u_id = #{u_id} AND uc_state=0 
		AND <![CDATA[ sysdate < c_enddate ]]>
	</select>
	
	<!-- 발급쿠폰 리스트 조회(사용완료) -->
	<select id="couponListN" parameterType="mypage" resultType="mypage">
		SELECT u_id, U.c_num, c_name, c_discount, uc_state, TO_CHAR(c_startdate,'yyyy-mm-dd') c_startdate, 
			TO_CHAR(c_enddate,'yyyy-mm-dd') c_enddate, TO_CHAR(uc_date,'yyyy-mm-dd') uc_date		
		FROM user_coupon U INNER JOIN admin_coupon A
		                         ON U.c_num = A.c_num
		WHERE u_id = #{u_id} AND uc_state=1
		ORDER BY c_num DESC
	</select>
	
	<!-- 발급쿠폰 개수(사용완료) -->
	<select id="couponListCntN" parameterType="mypage" resultType="int">
		SELECT COUNT(*)
		FROM user_coupon U INNER JOIN admin_coupon A
		                         ON U.c_num = A.c_num
		WHERE u_id = #{u_id} AND uc_state=1	
	</select>
	
	<select id="expectList" parameterType="mypage" resultType="mypage">
		SELECT rnum, ex_no, s_num, s_name, ex_title, ex_regdate
		FROM ( 
		    SELECT 
		        rnum, ex_no, E.s_num, s_name, ex_title, TO_CHAR(ex_regdate,'yyyy-mm-dd') ex_regdate
		    FROM (
		        SELECT 
		            rownum AS rnum, ex_no, s_num, ex_title, ex_regdate, u_id
		        FROM expect
		        WHERE u_id = #{u_id}
		        ORDER BY ex_no DESC
		    ) E INNER JOIN show S ON E.s_num = S.s_num
		    WHERE
			 <![CDATA[ rownum <= (1 * 10)
		)
		WHERE (rnum > (1 - 1) * 10) 
		]]>
	</select>
	
	<select id="expectListCnt" parameterType="mypage" resultType="int">
		SELECT COUNT(*)
		FROM expect
		WHERE u_id = #{u_id}
	</select>
</mapper>