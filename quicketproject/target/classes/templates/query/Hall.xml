<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.admin.ticket.dao.HallDao">
 
	<sql id="hallSearch">
		<if test="search=='s_name'">
			 (s_name LIKE '%'||#{keyword}||'%')
		</if>
	</sql>
        
	 <select id="hall_list" parameterType="hall" resultType="hall">
	 	select hallList.s_num, s_name ,th_name, TO_CHAR(to_date(hall_end,'mm/dd/yy'),'yyyy-mm-dd') as hall_end,TO_CHAR(to_date(hall_start,'mm/dd/yy'),'yyyy-mm-dd') as hall_start,
		TO_DATE(to_date(hall_end,'mm/dd/yy'), 'YYYY-MM-DD') - TO_DATE(to_date(hall_start,'mm/dd/yy'), 'YYYY-MM-DD') + 1 as date_gap, 
		count(h.hall_id) as data_num 
	 	from
	 	(
	 	select ROWNUM as rnum ,th_num,s_num,s_name
		from show
		WHERE <trim prefix="(" suffix=") AND " prefixOverrides="AND">
					<include refid="hallSearch"></include>
				</trim>
			<![CDATA[ rownum <= #{pageNum} * #{amount}
        order by s_num
        ) hallList
		LEFT JOIN hall h
        ON h.s_num = hallList.s_num and h.th_num = hallList.th_num
        LEFT JOIN theater t
		ON h.th_num = t.th_num
        WHERE rnum > (#{pageNum}-1) * #{amount}
        ]]>
		group by hallList.s_num,s_name ,th_name, hall_end, hall_start
		order by hallList.s_num
	</select> 
	<!-- 전체출력 -->
	<!-- <select id="hall_list" parameterType="hall" resultType="hall">
	 	select hallList.s_num, s_name ,th_name, hall_end1 as hall_end,hall_start1 as hall_start,
        TO_DATE(hall_end1, 'YYYY-MM-DD') - TO_DATE(hall_start1, 'YYYY-MM-DD') + 1 as date_gap, 
        count(hallList.hall_id) as data_num 
			from
			(
			select h.hall_id, s.s_num, s_name ,th_name, TO_CHAR(to_date(hall_end,'mm/dd/yy'),'yyyy-mm-dd') as hall_end1,TO_CHAR(to_date(hall_start,'mm/dd/yy'),'yyyy-mm-dd') as hall_start1 
			from hall h LEFT JOIN theater t
			ON h.th_num = t.th_num
			LEFT JOIN show s
			ON h.s_num = s.s_num and h.th_num = s.th_num
			and 
			<![CDATA[ rownum <= #{pageNum} * #{amount}
			        ) hallList
			            WHERE ROWNUM > (#{pageNum}-1) * #{amount}
			            ]]>
			            <trim prefix="AND (" suffix=") " prefixOverrides="AND">
					<include refid="hallSearch"></include>
				</trim>
			group by hallList.s_num,s_name ,th_name, hall_end1, hall_start1
			order by s_num
	</select>  -->
	 <!-- 전체 레코드 수 조회  -->
   <select id="hall_listCnt" parameterType="hall" resultType="int">
      SELECT count(*) FROM show
      <trim prefix=" where (" suffix=")" >
         <include refid="hallSearch"></include>
      </trim>
   </select>
	 <select id = "payCancelPage" resultType="pay">
	 	select distinct(p.pay_num),TO_CHAR(ti_date, 'YYYY-MM-DD') ti_date, t.u_id, s.s_name, pay_status
				from ticket t 
		        INNER JOIN ticket_seat ts ON t.pay_num = ts.pay_num 
		        INNER JOIN seat se ON ts.seat_num = se.seat_num and ts.hall_id = se.hall_id
		        INNER JOIN hall h ON se.hall_id = h.hall_id
		        INNER JOIN theater th ON h.th_num = th.th_num
		        INNER JOIN show s ON th.th_num = s.th_num
		        INNER JOIN pay p ON t.pay_num = p.pay_num
	</select> 
	
	<select id="hallDetail" parameterType="hall" resultType="hall">
		select hall_id, s_name ,th_name, h.hall_place as hall_place, h.hall_turn as hall_turn,t.th_num,
		h.hall_seatNum as hall_seatNum, hall_start as hall_start,hall_end, hall_date, hall_time,s.s_num
		from theater t LEFT JOIN hall h
		ON t.th_num = h.th_num
		LEFT JOIN show s
		ON t.th_num = s.th_num
		WHERE s.s_num= #{s_num}
	</select>
	<select id="hallDetail2" parameterType="hall" resultType="hall">
		select *
		from theater t LEFT JOIN hall h
		ON t.th_num = h.th_num
		LEFT JOIN show s
		ON t.th_num = s.th_num
		WHERE hall_id= #{hall_id}
	</select>

	<select id="seat_updateForm" parameterType="hall" resultType="seat">
		select * 
		from seat 
		where hall_id=#{hall_id}
	</select>
	<select id="seat_updateForm2" parameterType="seat" resultType="seat">
		select seat_num, seat_name, h.hall_id, seat_status, seat_age, TO_CHAR(seat_update,'YYYY-MM-DD') as seat_update, th.th_num,s.s_num
			from  seat se INNER JOIN hall h ON  se.hall_id = h.hall_id
		        INNER JOIN theater th ON h.th_num = th.th_num
		        INNER JOIN show s ON th.th_num = s.th_num and s.s_num = h.s_num
		where seat_num=#{seat_num} and h.hall_id = #{hall_id}
	</select>
	
	<update id="hallUpdate" parameterType="hall">
		UPDATE hall 
		SET hall_place = #{hall_place},
			hall_turn = #{hall_turn},
			hall_time = #{hall_time},
			hall_seatNum = #{hall_seatNum},
			hall_date = #{hall_date}
		where hall_id = #{hall_id}
	</update>
	<delete id="hall_delete" parameterType="hall">
		DELETE FROM hall
		where th_num=#{th_num} and hall_id=#{hall_id} and s_num=#{s_num}
	</delete>
	<delete id="seat_delete" parameterType="seat">
		DELETE FROM seat
		where seat_num=#{seat_num} and hall_id = #{hall_id}
	</delete>
	<insert id="hall_write" parameterType="hall">
		INSERT INTO HALL
		VALUES(HALL_SEQ.nextval, #{hall_place}, #{hall_turn},#{hall_time}, #{hall_seatNum},#{hall_date}, #{hall_start}, #{hall_end}, SYSDATE, SYSDATE, #{th_num}, #{s_num})
	</insert>
	<insert id="seat_write" parameterType="seat">
		INSERT INTO seat(seat_num,seat_name,hall_id,seat_status,seat_age,seat_regdate)
		VALUES(#{seat_num},#{seat_name},#{hall_id},#{seat_status},#{seat_age},SYSDATE)
	</insert>
	<update id="seatUpdate" parameterType="seat">
		UPDATE seat 
		SET seat_name = #{seat_name},
			seat_status = #{seat_status},
			seat_age = #{seat_age},
			seat_update = #{seat_update}
		where seat_num=#{seat_num} and hall_id = #{hall_id}
	</update>
	
	<!-- 결제 취소 테이블 반환 -->
	<select id="payToken" parameterType="Integer" resultType="pay">
		select * from PAY where pay_num=#{pay_num}
	</select> 
	
	<update id="payStatus" parameterType="Integer">
		UPDATE pay 
		SET pay_status = 0
		WHERE pay_num = #{pay_num}
	</update>
	<update id="ticketStatus" parameterType="Integer">
		UPDATE ticket 
		SET ti_status = 0
		WHERE pay_num = #{pay_num}
	</update>
	
	<!-- 예매 좌석 테이블 조회 -->
	<select id="ticketSeatSelect" parameterType="pay" resultType="seat">
		SELECT * from ticket_seat where pay_num = #{pay_num}
	</select>
	
	<!-- 좌석 테이블 상태값 변경 -->
	 <update id="seatStatusCancelUpdate" parameterType="java.util.List">
	 	 <foreach collection="list" item="item" index="index" separator=";" open="DECLARE BEGIN" close="; END;">
			UPDATE SEAT
			SET seat_age = '', seat_status = 0
			WHERE seat_num = #{item.seat_num} and hall_id = #{item.hall_id}
	    </foreach>
	</update>
</mapper>