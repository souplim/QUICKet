<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.common.task.RankDao">
	<select id="getRankTicket" parameterType="rankVO" resultType="rankVO">
		<![CDATA[
        select total.s_num s_num,  total.s_genre s_genre,
		nvl((ticketed.seat/total.seat*100),0) rank_ticket,
		dense_rank() over (order by nvl((ticketed.seat/total.seat*100),0) desc) rank_rank,
        dense_rank() over (partition by total.s_genre order by nvl((ticketed.seat/total.seat*100),0) desc) rank_genre_rank from
		(select s.s_num, sum(nvl(hall_seatnum,0)) seat, s.s_genre from show s left join 
		(select s_num, hall_seatnum from hall where to_date(hall_date,'MM/dd/yyyy') between 
		#{rank_start} and #{rank_end}
		) h on h.s_num = s.s_num group by s.s_num, s.s_genre) total
		left join 
		(select h.s_num, sum(ticketed) seat from hall h left join
		(select ts.hall_id hall_id, count(t.pay_num) ticketed from ticket_seat ts left join (select * from ticket where ti_status=1 
		and to_char(ti_date,'YYYY-MM-DD') between
		#{rank_start} and #{rank_end}
		) t on ts.pay_num = t.pay_num
		group by ts.hall_id) td on h.hall_id = td.hall_id group by h.s_num) ticketed
		on total.s_num = ticketed.s_num
		order by total.s_num
		]]>
	</select>
	
	<insert id="rankInsert" parameterType="rankVO">
		insert into rank(rank_id, rank_start, rank_ticket, rank_end, rank_rank, rank_genre_rank, s_num) 		
		values(rank_seq.nextval, #{rank_start}, #{rank_ticket}, #{rank_end}, #{rank_rank}, #{rank_genre_rank}, #{s_num})
	</insert>

</mapper>