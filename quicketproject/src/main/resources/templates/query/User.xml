<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.client.user.dao.ClientUserDao">

	<!-- 로그인 -->
	<select id="userLoginProcess" parameterType="user" resultType="user">
		select u_num, u_id, u_name, u_state, to_char(u_pwddate,'YYYY-MM-DD') as u_pwddate, u_email
		from q_user 
		where u_id = #{u_id} and u_pwd = #{u_pwd}
	</select>

	<!-- 회원정보 조회 -->
	<select id="userInfo" parameterType="user" resultType="user">
		select u_num, u_id, u_pwd, u_name, u_gender, to_char(u_birth,'YYYY-MM-DD') as u_birth, u_email, u_phone,
		to_char(u_regdate,'YYYY-MM-DD') as u_regdate, to_char(u_moddate,'YYYY-MM-DD') as u_moddate, to_char(u_pwddate,'YYYY-MM-DD') as u_pwddate 
		from q_user
		where u_num = #{u_num}
		
	</select>
	
	
	<!-- 회원가입 처리 -->

	<insert id="userJoin" parameterType="user">
		insert into q_user(u_id, u_num, u_pwd, u_name, u_gender, u_birth, u_email, u_phone)
		values (#{u_id}, q_user_seq.nextval, #{u_pwd}, #{u_name}, #{u_gender}, to_date(#{u_birth},'YYYY-MM-DD'), #{u_email}, #{u_phone})
	</insert>
	
	<!-- 아이디 중복 체크 -->
	<select id="idCheck" parameterType="String" resultType="int">
		select nvl((select 1 from q_user where u_id = #{u_id}), 0) as result from dual
	</select>
	
	<!-- 비밀번호 변경 처리  -->
	<update id="setNewPwd" parameterType="user">
		update q_user
		set u_pwd = #{u_pwd}, u_pwddate = sysdate, u_moddate = sysdate
		where u_id = #{u_id}		
	</update>
	
	<!-- 회원 탈퇴 처리 -->
	<update id="userDelete" parameterType="user">
		update q_user
		set u_state = 0, u_moddate = sysdate
		where u_num = #{u_num}
	</update>
	
	<!-- 회원 정보 수정 처리-->
	<update id="userUpdate" parameterType="user">
		update q_user
		set u_email = #{u_email}, u_moddate = sysdate, u_phone = #{u_phone}
		where u_num = #{u_num} 
	</update> 
	
	<!-- 전화번호로 아이디 찾기 -->
	<select id="searchIdPhone" parameterType="String" resultType="user">
	 select u_id, to_char(u_regdate,'YYYY-MM-DD') as u_regdate
	 from q_user
	 where u_name = #{u_name} and u_phone = #{u_phone} and u_state = 1
 	 </select>
	
	<!-- 이메일로 아이디 찾기 -->
	<select id="searchIdEmail" parameterType="String" resultType="user">
	 select u_id, to_char(u_regdate,'YYYY-MM-DD') as u_regdate
	 from q_user
	 where u_name = #{u_name} and u_email = #{u_email} and u_state = 1
 	 </select>
 	 
 	 <!-- 비밀번호 찾기 : 일치하는 회원 정보 존재하는지 확인 -->
 	 <select id="userConfirm" parameterType="String" resultType="int">
 	 	select nvl((
 	 		select 1 from q_user
 	 		where u_name = #{u_name} and u_id = #{u_id} and u_email = #{u_email} and u_state = 1
 	 	), 0) as result
 	 	from dual
 	 </select>
 	 
 	<!-- 새 비밀번호 변경 처리  
	<update id="newPwd" parameterType="user">
		update q_user
		set u_pwd = #{u_pwd}, u_pwddate = sysdate, u_moddate = sysdate
		where u_id = #{u_id}		
	</update>-->
</mapper>