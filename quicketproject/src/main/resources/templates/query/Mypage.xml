<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.client.mypage.dao.MypageDao">

	<!-- 날짜로 검색 -->
	<select id="myTicketList" parameterType="mypage" resultType="mypage">
		<![CDATA[
			SELECT 
			    rnum, ti_num, ti_regdate, s_num, s_name, seat_date, COUNT(seat_num) AS seat_num, u_id, ti_status  
			FROM (
			    SELECT 
			        rnum, t.ti_num, to_char(t.ti_regdate,'yyyy-mm-dd') AS ti_regdate, s_num, s_name, 
			        to_char(t.seat_date,'yyyy-mm-dd') AS seat_date, se.seat_num, t.u_id, t.ti_status 
			    FROM (
			        SELECT 
			            rownum AS rnum, ti_num, ti_regdate, seat_date, u_id, ti_status  
			        FROM ticket
			        ORDER BY ti_regdate desc
			    ) t JOIN ticket_seat ts ON t.ti_num = ts.ti_num
			        JOIN seat se ON ts.seat_num = se.seat_num
			        JOIN hall h ON se.hall_id = h.hall_id
			        JOIN theater th ON h.th_num = th.th_num
			        JOIN show s ON th.th_num = s.th_num
			    WHERE 
			    ]]>
		    <trim prefix="(" suffix=") AND" prefixOverrides="AND"> <!-- 아래 조건 만족하지 않으면 () AND <- AND 제거 -->
				<if test="search=='seat_date'">
					<![CDATA[to_char(seat_date, 'YYYY-MM-DD') between #{start_date} and #{end_date} ]]>
				</if>
				<if test="search=='ti_regdate'">
					<![CDATA[to_char(ti_regdate, 'YYYY-MM-DD') between #{start_date} and #{end_date} ]]>
				</if>
			</trim>
			<![CDATA[ rownum <= #{pageNum} * #{amount} AND u_id = #{u_id}
			) 
			WHERE rnum > (#{pageNum} -1) * #{amount}
			GROUP BY rnum, ti_num, ti_regdate, s_num, s_name, seat_date, u_id, ti_status
		]]>
	</select>
	
	<select id="ticketListCnt" parameterType="mypage" resultType="int">
		SELECT COUNT(ti_num) FROM ticket
		WHERE u_id = #{u_id}
	</select>
	
	<!-- 상세정보 조회(관심공연 추가) -->
	<select id="myTicketDetail" parameterType="mypage" resultType="mypage">
		SELECT 
		    rnum, ti_num, ti_regdate, RESULT.s_num, s_name, seat_date, COUNT(seat_num) AS seat_num, u_id, ti_status, img_dir, th_name, hall_id, 
		    hall_turn, s_price, pay_name, pay_amount, B.is_likes
		FROM (
		    SELECT 
		        rnum, t.ti_num, t.ti_regdate, s.s_num, s_name, seat_date, ts.seat_num, t.u_id, t.ti_status, i.img_dir, th.th_name, h.hall_id, 
		        h.hall_turn, s.s_price, p.pay_name, p.pay_amount
		    FROM (
		        SELECT 
		            rownum AS rnum, ti_num, ti_regdate, seat_date, u_id, ti_status  
		        FROM ticket
		        ORDER BY ti_regdate desc
		    ) t JOIN ticket_seat ts ON t.ti_num = ts.ti_num
		        JOIN seat se ON ts.seat_num = se.seat_num
		        JOIN hall h ON se.hall_id = h.hall_id
		        JOIN theater th ON h.th_num = th.th_num
		        JOIN show s ON th.th_num = s.th_num
		        JOIN img i ON s.s_num = i.s_num
		        JOIN pay p ON t.ti_num = p.ti_num
		    WHERE t.ti_num = #{ti_num}  AND img_id = 1
		) RESULT LEFT JOIN (SELECT s_num, 1 is_likes FROM bookmark 
							WHERE EXISTS(SELECT 1 FROM bookmark WHERE u_id = #{u_id} AND s_num = #{s_num})) B
		  			  ON RESULT.s_num = B.s_num
		GROUP BY rnum, ti_num, ti_regdate, RESULT.s_num, s_name, seat_date,  u_id, ti_status, img_dir, th_name, hall_id, hall_turn, s_price, 
		pay_name, pay_amount, B.is_likes			    
	</select>
	
	<!-- 좌석번호 리스트 조회 -->
	<select id="mySeatList" parameterType="int" resultType="mypage">
		SELECT seat_num
		FROM ticket t JOIN ticket_seat ts 
						ON t.ti_num = ts.ti_num
		WHERE t.ti_num = #{ti_num}
	</select>
	
	<!-- 예매 취소 -->
	<update id="myTicketDelete" parameterType="int">
		UPDATE ticket
		SET ti_status = 0
		WHERE ti_num = #{ti_num}
	</update>
	
	
	<!-- 관심공연 등록 -->
	<insert id="addlikes" parameterType="mypage">
		INSERT INTO bookmark (u_id, s_num)
		VALUES(#{u_id}, ${s_num})
	</insert>
	
	<!-- 관심공연 취소 -->
	<delete id="cancelLikes" parameterType="mypage">
		DELETE bookmark
		WHERE u_id = #{u_id} AND s_num = #{s_num}
	</delete>
	
	<!-- (문의글 등록폼 페이지) 회원의 예매번호, 공연이름 조회 -->
	<select id="ticketList" parameterType="String" resultType="mypage">
		SELECT t.u_id, t.ti_num, s.s_name, seat_date
		FROM ticket t JOIN ticket_seat ts ON t.ti_num = ts.ti_num
		              JOIN seat se ON ts.seat_num = se.seat_num
		              JOIN hall h ON se.hall_id = h.hall_id
		              JOIN theater th ON h.th_num = th.th_num
		              JOIN show s ON th.th_num = s.th_num
		WHERE u_id = #{u_id}
		GROUP BY t.u_id, t.ti_num, s.s_name, seat_date
	</select>
	
	<!-- 관심공연 리스트 조회 -->
	<select id="myLikeList" parameterType="mypage" resultType="mypage">
		SELECT S.s_num, s_name, TO_CHAR(s_opendate,'yyyy-mm-dd') AS s_opendate, TO_CHAR(s_closedate,'yyyy-mm-dd') AS s_closedate, TO_CHAR(b_regidate,'yyyy-mm-dd') AS b_regidate
		FROM bookmark B INNER JOIN show S
		                        ON B.s_num = S.s_num
		WHERE u_id = #{u_id}
		ORDER BY b_regidate DESC
	</select>
</mapper>